spring.application.name=spring.cloud.eureka
server.port=1111
management.port=1112

eureka.client.serviceUrl.defaultZone=http://127.0.0.1:1111/eureka/
eureka.instance.prefer-ip-address=false
#just use the ip address
eureka.instance.hostname=127.0.0.1

#Indicates how often(in seconds) to fetch the registry information from the eureka\n server.
eureka.client.registry-fetch-interval-seconds=5
#Indicates the time in seconds that the eureka server waits since it received the\n last heartbeat before it can remove this instance from its view and there by\n disallowing traffic to this instance.\n\n Setting this value too long could mean that the traffic could be routed to the\n instance even though the instance is not alive. Setting this value too small could\n mean, the instance may be taken out of traffic because of temporary network\n glitches.This value to be set to atleast higher than the value specified in\n leaseRenewalIntervalInSeconds.
eureka.instance.lease-expiration-duration-in-seconds=10
#Indicates how often (in seconds) the eureka client needs to send heartbeats to\n eureka server to indicate that it is still alive. If the heartbeats are not\n received for the period specified in leaseExpirationDurationInSeconds, eureka\n server will remove the instance from its view, there by disallowing traffic to this\n instance.\n\n Note that the instance could still not take traffic if it implements\n HealthCheckCallback and then decides to make itself unavailable.
eureka.instance.lease-renewal-interval-in-seconds=5
#当Eureka Server节点在短时间内丢失过多客户端时（可能发生了网络分区故障），那么这个节点就会进入自我保护模式
eureka.server.enable-self-preservation=true
#eureka server清理无效节点的时间间隔
eureka.server.eviction-interval-timer-in-ms=5000

eureka.server.response-cache-update-interval-ms=5000
#Indicates how long initially (in seconds) to replicate instance info to the eureka\n server
eureka.client.initial-instance-info-replication-interval-seconds=5
#Indicates how often(in seconds) to poll for changes to eureka server information.\n Eureka servers could be added or removed and this setting controls how soon the\n eureka clients should know about it.
eureka.client.eureka-service-url-poll-interval-seconds=5

    #timeout
default.readTimeout=10000
default.connectTimeout=10000

    #timeout for restTemplate
spring.rest.connection.connection-request-timeout=${default.connectTimeout}
spring.rest.connection.connect-timeout=${default.connectTimeout}
spring.rest.connection.read-timeout=${default.readTimeout}

    #timeout fegin request
spring.fegin.request.connectTimeoutMillis=${default.connectTimeout}
spring.fegin.request.readTimeoutMillis=${default.readTimeout}

spring.cloud.config.server.git.uri=https://github.com/chxfantasy/spring-cloud-demo-config
#spring.cloud.config.server.git.username=XXXX
#spring.cloud.config.server.git.password=XXXX
spring.cloud.config.server.git.search-paths=/app
#spring.cloud.config.server.prefix=/config

management.security.enabled=false