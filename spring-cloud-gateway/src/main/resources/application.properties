#ribbon负载均衡算法
spring.cloud.account.ribbon.NFLoadBalancerRuleClassName=com.netflix.loadbalancer.BestAvailableRule
##ribbon更新serverlist的时间间隔，默认30s
spring.cloud.account.ribbon.ServerListRefreshInterval=5000

spring.cloud.biz.ribbon.NFLoadBalancerRuleClassName=com.netflix.loadbalancer.BestAvailableRule
spring.cloud.biz.ribbon.ServerListRefreshInterval=5000

spring.cloud.gateway.ribbon.NFLoadBalancerRuleClassName=com.netflix.loadbalancer.BestAvailableRule
spring.cloud.gateway.ribbon.ServerListRefreshInterval=5000

    #timeout
default.readTimeout=10000
default.connectTimeout=10000

    #timeout for restTemplate
spring.rest.connection.connection-request-timeout=${default.connectTimeout}
spring.rest.connection.connect-timeout=${default.connectTimeout}
spring.rest.connection.read-timeout=${default.readTimeout}

#fegin request timeout
spring.fegin.request.connectTimeoutMillis=${default.connectTimeout}
spring.fegin.request.readTimeoutMillis=${default.readTimeout}

###### enable feign - hystrix
feign.hystrix.enabled=true

#This property sets the minimum number of requests in a rolling window that will trip the circuit.
hystrix.command.default.circuitBreaker.requestVolumeThreshold=5
#This property sets the amount of time, after tripping the circuit, to reject requests before allowing attempts again to determine if the circuit should again be closed.
hystrix.command.default.circuitBreaker.sleepWindowInMilliseconds=10000

#hystrix    timeout
hystrix.command.default.execution.isolation.thread.timeoutInMilliseconds=${default.readTimeout}
#hystrix.threadpool
hystrix.threadpool.default.coreSize=10
hystrix.threadpool.default.maximumSize=50
hystrix.threadpool.default.maxQueueSize=200
hystrix.threadpool.default.queueSizeRejectionThreshold=100
hystrix.threadpool.default.allowMaximumSizeToDivergeFromCoreSize=true
hystrix.threadpool.default.keepAliveTimeMinutes=1

# logging
logging.level.root=info

#transaction
spring.transaction.default-timeout=10
spring.transaction.rollback-on-commit-failure=true

#mybatis
mybatis.config-location = classpath:/mybatis-config.xml
mybatis.mapper-locations=classpath:/mapping/*.xml
mybatis.type-aliases-package=spring.cloud.gateway.dataaccess.dataobject
mybatis.scanner-packages=spring.cloud.gateway.dataaccess.mapper

spring.devtools.restart.enabled=true

## REDIS (RedisProperties)
#spring.redis.database= # database name
spring.redis.host=127.0.0.1
#spring.redis.user=root
#spring.redis.password=root
spring.redis.port=6379
# 连接池中的最大空闲连接
spring.redis.pool.max-idle=100
# 连接池中的最小空闲连接
spring.redis.pool.min-idle=10
#连接池最大连接数（使用负值表示没有限制）
spring.redis.pool.max-active=1000
# 连接池最大阻塞等待时间（使用负值表示没有限制）
spring.redis.pool.max-wait=5000
# 连接超时时间（毫秒）
spring.redis.timeout=2000
#spring.redis.sentinel.master= # name of Redis server
#spring.redis.sentinel.nodes= # comma-separated list of host:port pairs

#velocity
spring.velocity.resourceLoaderPath=classpath:/
spring.velocity.prefix=
spring.velocity.suffix=.vm
spring.velocity.content-type=text/html
spring.velocity.toolbox-config-location=/WEB-INF/toolbox.xml
spring.velocity.cache=false
#spring.velocity.check-template-location=true
spring.velocity.charset=UTF-8
spring.velocity.properties.input.encoding=UTF-8
spring.velocity.properties.output.encoding=UTF-8
spring.velocity.layoutUrl=layout/default.vm

##当页面出错的时候，直接定向到/error.vm
server.error.whitelabel.enabled=false

#设置国际化配置文件存放在classpath:/i18n目录下
spring.messages.basename=i18n/messages
#设置加载资源的缓存失效时间，-1表示永久有效，默认为-1
spring.messages.cache-seconds=3600
#设定message bundles编码方式，默认为UTF-8
spring.messages.encoding=UTF-8

#Spring编码
spring.http.encoding.charset=UTF-8
spring.http.encoding.enable=true
spring.http.encoding.force=true

#上传文件大小限制
spring.http.multipart.max-file-size=50Mb
spring.http.multipart.max-request-size=50Mb


#mysql 建议配置超时时间
spring.datasource.url=jdbc:mysql://127.0.0.1:3306/test?autoReconnect=true&characterEncoding=UTF-8&zeroDateTimeBehavior=convertToNull
spring.datasource.username=root
spring.datasource.password=root
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
spring.datasource.driverClassName=com.mysql.cj.jdbc.Driver
spring.datasource.testOnBorrow=true
spring.datasource.validationQuery=SELECT 1
spring.datasource.initialSize=2
spring.datasource.minIdle=2
spring.datasource.maxActive=3000
# 配置获取连接等待超时的时间
spring.datasource.maxWait=5000
# 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
spring.datasource.timeBetweenEvictionRunsMillis=60000
# 配置一个连接在池中最小生存的时间，单位是毫秒
spring.datasource.minEvictableIdleTimeMillis=300000
spring.datasource.testWhileIdle=true
spring.datasource.testOnReturn=false
# 打开PSCache，并且指定每个连接上PSCache的大小
spring.datasource.poolPreparedStatements=true
spring.datasource.maxPoolPreparedStatementPerConnectionSize=20
# 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
spring.datasource.filters=stat,wall,log4j
# 通过connectProperties属性来打开mergeSql功能；慢SQL记录
spring.datasource.connectionProperties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
# 合并多个DruidDataSource的监控数据
#spring.datasource.useGlobalDataSourceStat=true